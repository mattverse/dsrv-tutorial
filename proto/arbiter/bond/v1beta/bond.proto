syntax = "proto3";
package arbiter.bond.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/sapiens-cosmos/arbiter/x/bond/types";

enum BondType {
  RESERVE = 0;
  LIQUIDITY = 1;
}

message BondState {
  string total_debt = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"total_debt\""
  ];
  int64 last_decay_height = 2 [(gogoproto.moretags) = "yaml:\"last_decay_height\""];
}

message BondPolicy {
  BondType bond_type = 1 [(gogoproto.moretags) = "yaml:\"bond_type\""];
  string bond_denom = 2 [(gogoproto.moretags) = "yaml:\"bond_denom\""];
  // BCV
  string control_variable = 3 [
   (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
   (gogoproto.nullable) = false,
   (gogoproto.moretags) = "yaml:\"control_variable\""
  ];
  // vestingHeight represented in blocks
  int64 vesting_height = 4 [(gogoproto.moretags) = "yaml:\"vesting_height\""];
}

message Bond {
  // # of tokens remaining to be paid
  uint64 debt = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"debt\""
  ];
  // blocks left for vesting
  int64 remaining_height = 2 [(gogoproto.moretags) = "yaml:\"remaining_height\""];
  // last interaction
  int64 last_height = 3 [(gogoproto.moretags) = "yaml:\"last_height\""];
}



